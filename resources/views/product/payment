<script>
   // <--------payment---------->
    Route::post('/initiate-payment/{bookingId}', [PaymentController::class, 'initiatePayment'])->name('initiate.payment');
    Route::get('/payment-success', [PaymentController::class, 'handlePaymentSuccess'])->name('payment.success');
    
    
            <form action="{{ route('initiate.payment', $booking->id) }}" method="POST">
            @csrf
            <button type="submit" class="btn pay-now-btn">Pay Now</button>
        </form>
    
    
    public function initiatePayment(Request $request, $bookingId)
    {
        $booking = Booking::findOrFail($bookingId);
    
        $amount = $booking->total_price * 100;
    
        $response = Http::withHeaders([
            'Authorization' => 'key ' . env('KHALTI_SECRET_KEY'),
            'Content-Type' => 'application/json',
        ])->post('https://dev.khalti.com/api/v2/epayment/initiate/', [
            'return_url' => route('payment.success'), 
            'website_url' => config('app.url'),
            'amount' => $amount,
            'purchase_order_id' => 'order_' . $booking->id, 
            'purchase_order_name' => 'Cold Storage Booking #' . $booking->id,
        ]);
    
        if ($response->successful()) {
            $paymentData = $response->json();
            return redirect($paymentData['payment_url']); // Redirect to Khalti payment page
        } else {
            return back()->with('error', 'Payment initiation failed. Please try again.');
        }
    }
    
     // Handle payment success callback
    public function handlePaymentSuccess(Request $request)
    {
        $paymentDetails = $request->all();

        // Verify payment using Khalti's API
        $response = Http::withHeaders([
            'Authorization' => 'key ' . env('KHALTI_SECRET_KEY'),
            'Content-Type' => 'application/json',
        ])->post('https://dev.khalti.com/api/v2/epayment/lookup/', [
            'pidx' => $paymentDetails['pidx'],
        ]);

        if ($response->successful()) {
            $verificationData = $response->json();

            // Update the booking status to 'paid'
            $booking = Booking::where('id', $verificationData['purchase_order_id'])->first();
            if ($booking) {
                $booking->update(['status' => 'paid']);
            }

            // Redirect to a success page
            return redirect()->route('bookings.show')->with('success', 'Payment successful!');
        } else {
            // Redirect to an error page
            return redirect()->route('booking.show')->with('error', 'Payment verification failed.');
        }
    }
</script>